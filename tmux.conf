#
# Config
#
set-option -g default-shell /bin/zsh

set -g default-terminal "screen-256color"

set -g history-limit 5000

# tmux prefix
# I override the left-side command key as the meta key.  When selecting "Secure
# Keyboard Entry" in iTerm, this still allows me to Cmd-Tab in OSX as normal.
# None of the other Cmd-* chords work, though, which is an acceptable trade-off
# by me.
unbind C-b
unbind M-\;
unbind \;
set -g prefix M-\;
bind -r \; last-window

# Don't zero-index windows (makes switching with the keypad much nicer)
set -g base-index 1
setw -g pane-base-index 1

# History
set -g history-limit 10000

# No escape delay
set -sg escape-time 0

# No tab rename
set -g allow-rename off

# Vi
setw -g mode-keys vi

# Activity monitor
setw -g monitor-activity on
set -g visual-activity off

# Cursor shape change for nvim
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# Key Bindings
#

# force a reload of the config file
bind -n M-R source-file ~/.tmux.conf \; display-message " reloaded!"

# window splitting
unbind %
bind -n M-| split-window -h
unbind '"'
bind -n M-- split-window -v
bind -n M-X kill-window

# resize panes
bind -n M-H resize-pane -L 1
bind -n M-J resize-pane -D 1
bind -n M-K resize-pane -U 1
bind -n M-L resize-pane -R 1

# Cut and Paste
bind-key -Tcopy-mode-vi Enter send -X copy-pipe "reattach-to-user-namespace pbcopy"
bind-key -Tcopy-mode-vi y send -X copy-pipe "reattach-to-user-namespace pbcopy"

# paste
bind -n M-p paste-buffer

# create 'v' alias for selecting text
bind-key -Tcopy-mode-vi v send -X begin-selection

# send to all panes
bind-key a set-window-option synchronize-panes

###############################
# Pane and Window Switching
###############################

unbind -n M-i
bind -n M-i copy-mode
# unbind M-\;
# bind -r M-\; switch-client -l

# In iterm preferences, I switch Command to be Meta and use this as my "tmux
# leader".  vim-tmux-navigator is awesome, but with it, you must give up ctrl-h
# in insert mode which is unacceptable.
unbind -n M-k
unbind -n M-j
unbind -n M-h
unbind -n M-l

unbind -n C-j
unbind -n M-j
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n M-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n M-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n M-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n M-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n M-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# I'm really lazy.  This also prevents me from accidentally
# changing the layout while switching windows.
unbind -n M-a
unbind -n M-s
unbind -n M-d
unbind -n M-f
unbind -n M-q
unbind -n M-w
unbind -n M-e
unbind -n M-r
bind -n M-a select-window -t 1
bind -n M-s select-window -t 2
bind -n M-d select-window -t 3
bind -n M-f select-window -t 4
bind -n M-q select-window -t 5
bind -n M-w select-window -t 6
bind -n M-e select-window -t 7
bind -n M-r select-window -t 8

# Window navigation

unbind -n \}
unbind -n \{
bind -n M-\} next-window
bind -n M-\{ previous-window

unbind -n M-:
bind -n M-: command-prompt

unbind -n M-,
bind -n M-, command-prompt 'rename-window %%'

unbind -n M-c
bind -n M-C new-window

unbind -n M-z
bind -n M-z resize-pane -Z

# mouse
set -g mouse on

#######################
# Status Bar
#######################

# Get readline in prompt, wooo
set -g status-keys emacs

# set refresh interval for status bar
set -g status-interval 30

# status bar
set -g status-justify left

# show session, window, pane in left status bar
set -g status-left '#[fg=colour16,bg=colour241,bold]  #S  #[fg=colour235,bg=colour238]▏'
set -g status-left-length 60
set -g status-right-length 38
set -g status-right '#[fg=colour11]#{?pane_synchronized,SYNC  #[fg=colour235]▏,} #[fg=colour244]#(date "+%a %b%d")  #[fg=colour235]▏ #[fg=colour249]#(date "+%I:%M%p") #[fg=colour235]▐#[fg=colour137]#(~/dotfiles/sh/battery.sh)'
set -g status-justify left


#######################
# Colours
#######################

set -g window-status-current-format   ' #F #W '
set -g window-status-format           ' #F #W '

set -g window-status-activity-style fg=colour234,bg=colour238

set -g status-style fg=colour233,bg=colour238

set -g window-status-style fg=colour234,bg=colour238
set -g window-status-current-style fg=colour16,bg=colour244

set -g message-style fg=colour246,bg=colour238
set -g message-command-style fg=colour246,bg=colour238

set -g pane-border-style fg=colour234,bg=colour236
set -g pane-active-border-style fg=colour234,bg=colour236
