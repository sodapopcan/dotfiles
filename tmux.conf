#
# Config
#
set-option -g default-shell /bin/zsh

set -g default-terminal "screen-256color"

set -g history-limit 5000

# tmux prefix
# I override the left-side command key as the meta key.  When selecting "Secure
# Keyboard Entry" in iTerm, this still allows me to Cmd-Tab in OSX as normal.
# None of the other Cmd-* chords work, though, which is an acceptable trade-off
# by me.
unbind C-b
unbind M-\;
unbind \;
set -g prefix M-\;
bind -r \; last-window
bind -r M-j switch-client -l

# Don't zero-index windows (makes switching with the keypad much nicer)
set -g base-index 1
setw -g pane-base-index 1

# No escape delay
set -sg escape-time 0

# Vi
setw -g mode-keys vi

# Activity monitor
setw -g monitor-activity on
set -g visual-activity off

# Key Bindings
#

# force a reload of the config file
bind R source-file ~/.tmux.conf \; display-message " reloaded!"

# window splitting
unbind %
bind | split-window -h
unbind '"'
bind - split-window -v

# resize panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 1
bind -r K resize-pane -U 1
bind -r L resize-pane -R 5

# Cut and Paste
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

 # paste
 unbind C-p
 bind C-p paste-buffer

# create 'v' alias for selecting text
bind-key -t vi-copy v begin-selection


###############################
# Pane and Window Switching
###############################

unbind M-k
bind M-k copy-mode
# unbind M-\;
# bind -r M-\; switch-client -l

# In iterm preferences, I switch Command to be Meta and use this as my "tmux
# leader".  vim-tmux-navigator is awesome, but with it, you must give up ctrl-h
# in insert mode which is unacceptable.
unbind l
bind k select-pane -U
bind j select-pane -D
bind h select-pane -L
bind l select-pane -R

# is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
# bind -n M-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
# bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
# bind -n M-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
# bind -n M-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# bind -n M-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# I'm really lazy.  This also prevents me from accidentally
# changing the layout while switching windows.
unbind a
unbind s
unbind d
unbind f
unbind q
unbind w
unbind e
unbind r
bind -r a select-window -t 1
bind -r s select-window -t 2
bind -r d select-window -t 3
bind -r f select-window -t 4
bind -r q select-window -t 5
bind -r w select-window -t 6
bind -r e select-window -t 7
bind -r r select-window -t 8

# mouse
set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

#######################
# Status Bar
#######################

# enable UTF-8 support in status bar
set -g status-utf8 on

# set refresh interval for status bar
set -g status-interval 30

# center the status bar
set -g status-justify left

# show session, window, pane in left status bar
set -g status-left '#[fg=colour16,bg=colour241,bold]  #S  #[fg=colour235,bg=colour238]▏'
set -g status-left-length 60
set -g status-right-length 30
set -g status-right '#[fg=colour244]#(date "+%a %b%d")  #[fg=colour235]▏ #[fg=colour249]#(date "+%I:%M%p") #[fg=colour235]▐#[fg=colour137]#(~/dotfiles/sh/battery.sh)'
set -g status-justify left


#######################
# Colours
#######################

set -g window-status-current-format   ' #W '
set -g window-status-format           ' #W '

set -g window-status-activity-style fg=colour143,bg=colour238

set -g status-style fg=colour233,bg=colour238

set -g window-status-style fg=colour234,bg=colour238
set -g window-status-current-style fg=colour246

set -g message-style fg=colour246,bg=colour238
set -g message-command-style fg=colour246,bg=colour238

set -g pane-border-style fg=colour235,bg=colour236
set -g pane-active-border-style fg=colour235,bg=colour236
